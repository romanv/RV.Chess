using System.Numerics;
using RV.Chess.Board.Game;
using RV.Chess.Board.Types;
using RV.Chess.Shared.Types;

namespace RV.Chess.Board.Utils
{
    public static class Zobrist
    {
        internal const uint DefaultPositionHash = 380329305;

        internal static uint GetHash(Chessgame game)
        {
            uint hash = 0;

            if (game.SideToMove == Side.White)
            {
                hash ^= WhiteTurn;
            }

            if (game.CastlingRights.CanCastle(CastlingRights.WhiteKingside))
            {
                hash ^= Castling[0];
            }

            if (game.CastlingRights.CanCastle(CastlingRights.WhiteQueenside))
            {
                hash ^= Castling[1];
            }

            if (game.CastlingRights.CanCastle(CastlingRights.BlackKingside))
            {
                hash ^= Castling[2];
            }

            if (game.CastlingRights.CanCastle(CastlingRights.BlackQueenside))
            {
                hash ^= Castling[3];
            }

            for (var i = 0; i < 64; i++)
            {
                var piece = game.Board.GetPieceTypeAt(i);
                var side = game.Board.GetPieceSideAt(i);
                hash ^= GetPieceHash(i, piece, side);
            }

            hash ^= GetEnPassantHash(game.EpSquareMask);

            return hash;
        }

        internal static uint GetPieceHash(int square, PieceType type, Side side)
        {
            var index = ((int)type - 1) * 2 + (int)side;
            return Pieces[64 * index + square];
        }

        internal static uint GetEnPassantHash(ulong epSquareMask)
        {
            return epSquareMask > 0
                ? EnPassant[BitOperations.TrailingZeroCount(epSquareMask) % 8]
                : 0;
        }

        // 768 items = 12 pieces * 64 squares
        internal static readonly uint[] Pieces = new uint[]
        {
            0x9d39247e, 0x2af73980, 0x44db0150, 0x9c15f73e, 0x75834465, 0x3290ac3a, 0x0fbbad1f, 0xe83a908f,
            0x0d7e765d, 0x1a083822, 0x9605d5f0, 0xd021ff5c, 0x40bdf15d, 0x01135514, 0x5db48320, 0x239f8b2d,
            0x05d1a1ae, 0x679f848f, 0x7449bbff, 0x7d11cdb1, 0x82c7709e, 0xf3218f1c, 0x331478f3, 0x4bb38de5,
            0xaa649c6e, 0x8dbd98a3, 0x87d2074b, 0x19f3c751, 0xb4ab30f0, 0x7b0500ac, 0xc9452ca8, 0x24aa6c51,
            0x4c9f3442, 0x14a68fd7, 0xa71b9b83, 0x03488b95, 0x637b2b34, 0x09d1bc9a, 0x35756683, 0x735e2b97,
            0x18727070, 0x1fcbacd2, 0xd310a7c2, 0xbf983fe0, 0x9f74d14f, 0x51ebdc4a, 0x5c82c505, 0xfcf7fe8a,
            0x3253a729, 0x8c74c368, 0xb9bc6c87, 0x7ef48f2b, 0x11d505d4, 0x6568fca9, 0x4de0b0f4, 0x96d69346,
            0x42e240cb, 0x6d2bdcda, 0x42880b02, 0x5f0f4a58, 0x39f890f5, 0x93c5b5f4, 0x63dc359d, 0xec16ca8a,
            0x5355f900, 0x07fb9f85, 0x5093417a, 0x7bcbc38d, 0x19fc8a76, 0x637a7780, 0x8249a47a, 0x79ad6955,
            0x14acbaf4, 0xf145b6be, 0xdabf2ac8, 0x24c3c94d, 0xbb6e2924, 0x0ce26c0b, 0xa49cd132, 0xe99d662a,
            0x27e6ad78, 0x8535f040, 0x54b3f4fa, 0x72b12c32, 0xee954d3c, 0x9a85ac90, 0x70ac4cd9, 0xf9b89d3e,
            0x87b3e2b2, 0xa366e5b8, 0xae4a9346, 0x1920c04d, 0x87bf02c6, 0x092237ac, 0xff07f64e, 0x8de8dca9,
            0x9c163326, 0xb3f22c3d, 0x390e5fb4, 0x5bfea5b4, 0x1e103291, 0x9a74acb9, 0x4f80f7a0, 0x6304d09a,
            0x2171e646, 0x5b9b63eb, 0x506aacf4, 0x1881afc9, 0x65030804, 0xdfd39533, 0xef927dbc, 0x7b32f7d1,
            0xb9fd7620, 0x05a7e8a5, 0xb5889c6e, 0x4a750a09, 0xcf464cec, 0xf538639c, 0x3c79a0ff, 0xede6c87f,
            0x799e81f0, 0x86536b8c, 0x97d7374c, 0xa246637c, 0x043fcae6, 0x920e4495, 0x70eb093b, 0x73a19219,
            0x56436c9f, 0xefac4b70, 0xbb215798, 0x45f20042, 0x930f80f4, 0xff6712ff, 0xae623fd6, 0xdd2c5bc8,
            0x7eed120d, 0x22fe5454, 0xc91800e9, 0x808bd68e, 0xdec46814, 0x1bede3a3, 0x43539603, 0xaa969b5c,
            0xa87832d3, 0x65942c7b, 0xded2d633, 0x21f08570, 0xb415938d, 0x91b859e5, 0x10cff333, 0x28aed140,
            0xc5cc1d89, 0x5648f680, 0x2d255069, 0x9bc5a38e, 0xef2f0543, 0xaf2042f5, 0x480412ba, 0xaef3af4a,
            0x19afe59a, 0x52593803, 0xf4f076e6, 0x11379625, 0xbce5d224, 0x9da4243d, 0x066f70b3, 0x4dc4de18,
            0x51039ab7, 0xc07a3f80, 0xb46ee9c5, 0xb3819a42, 0x21a00793, 0x2df16f76, 0x763c4a13, 0xf793c467,
            0xd7288e01, 0xde336a2a, 0x0bf692b3, 0x2c604a7a, 0x4850e73e, 0xcfc447f1, 0xb05ca3f5, 0x9ae182c8,
            0xa4fc4bd4, 0xe755178d, 0x69b97db1, 0xf9b5b7c4, 0xfc6a82d6, 0x9c684cb6, 0x8ec97d29, 0x6703df9d,
            0xc547f57e, 0x78e37644, 0xfe9a44e9, 0x08bd35cc, 0x9315e5eb, 0x94061b87, 0xdf1d9f9d, 0x3bba57b6,
            0xd2b7adee, 0xf7a255d8, 0xd7f4f244, 0xd95be88c, 0x336f52f8, 0xa74049da, 0xa2f61bb6, 0x4f2a5cb0,
            0x87d380bd, 0x16b9f7e0, 0x7ba2484c, 0xf3a678ca, 0x39b0bf7d, 0xfcaf55c1, 0x18fcf680, 0x4c0563b8,
            0x40e08793, 0x8cffa941, 0x68ca3905, 0x7a1ee967, 0x9d1d60e5, 0x3810e399, 0x32095b6d, 0x35cab621,
            0xa90b2449, 0x77a225a0, 0x513e5e63, 0x4361c0ca, 0xd941aca4, 0x528f7c86, 0x52ab92be, 0x9d1dfa2e,
            0x722ff175, 0x1d1260a5, 0x7a249a57, 0x04208fe9, 0x5a110c60, 0x0cd9a497, 0x56fd23c8, 0x284c847b,
            0x04feabfb, 0x742e1e65, 0x9a9632e6, 0x881b82a1, 0x506e6744, 0xb0183db5, 0x0ed9b915, 0x5e11e86d,
            0xf678647e, 0x1b85d488, 0xdab9fe65, 0x0d151d86, 0xa865a54e, 0x93c42566, 0x99e7afea, 0x48cbff08,
            0x7f9b6af1, 0x58627e1a, 0x2cd16e2a, 0xd363eff5, 0x0ce2a38c, 0x1a804aad, 0x907f3042, 0x501f65ed,
            0x37624ae5, 0x957baf61, 0x3a6c2793, 0xd4950353, 0x088e0495, 0xf943aee7, 0x6c3b8e3e, 0x364f6ffa,
            0xd60f6dce, 0x56963b0d, 0x16f50edf, 0xef195591, 0x565601c0, 0xecb53939, 0xbac7a9a1, 0xb344c470,
            0x65d34954, 0xb4b81b3f, 0xb4220611, 0x07158240, 0x7a13f18b, 0xbc4097b1, 0x59b97885, 0x99170a5d,
            0x6f423357, 0x325928ee, 0xd0e43662, 0x565c31f7, 0x30f56114, 0xd873db39, 0x7bd94e1d, 0xc7d9f168,
            0x947ae053, 0xc8c93882, 0x3a9bf55b, 0xd9a11fbb, 0x0fd22063, 0xb3f256d8, 0xb03031a8, 0x35dd37d5,
            0xe9f6082b, 0xebfafa33, 0x9255abb5, 0xb9ab4ce5, 0x693501d6, 0xc62c58f9, 0xcd454f8f, 0xbbe83f4e,
            0xdc842b7e, 0xba89142e, 0xa3bc941d, 0xe9f6760e, 0x09c7e552, 0x852f5493, 0x8107fccf, 0x098954d5,
            0x23b70edb, 0xc330de42, 0x4715ed43, 0xa8d7e4da, 0x0572b974, 0xb57d2e98, 0xe8d9ecbe, 0x2fe4b171,
            0x11317ba8, 0x7fbf21ec, 0x1725cabf, 0x964e915c, 0x3e2b8bcb, 0xbe7444e3, 0xf85b2b4f, 0x49353fea,
            0x1dd01aaf, 0x1fca8a92, 0xfc7c95d8, 0x18a6a990, 0xcccb7005, 0x3bdbb92c, 0xaa70b5b4, 0xe94c39a5,
            0xb7a0b174, 0xd4dba847, 0x2e18bc1a, 0x2de0966d, 0xb9c11d5b, 0x64972d68, 0x94628d38, 0xdbc0d2b6,
            0xd2733c43, 0x7e75d99d, 0x6ced1983, 0x97fcaacb, 0x7b77497b, 0x8547eddf, 0x79999cdf, 0xcffe1939,
            0x829626e3, 0x92fae242, 0x63e22c14, 0xc678b6d8, 0x58738888, 0x0981dcd2, 0x9f65789a, 0x9ff38fed,
            0xe479ee5b, 0xe7f28ecd, 0x56c074a5, 0x5544f7d7, 0x7b3f0195, 0x12153635, 0x7f5126db, 0x7a76956c,
            0x3d5774a1, 0x8a1b0838, 0x7b4a38e3, 0x95011364, 0x4da8979a, 0x3bc36e07, 0x5d0a12f2, 0x7f9d1a2e,
            0xda3a361b, 0xdcdd7d20, 0x36833336, 0xce68341f, 0xab909016, 0x43954b32, 0xb438c2b6, 0x10dcd78e,
            0xdbc27ab5, 0x9b3cdb65, 0xb67b7896, 0xbfced1b0, 0xa9119b60, 0x1fff7ac8, 0xac12fb17, 0xaf08da91,
            0x1b0cab93, 0xb559eb1d, 0xc37b45b3, 0xc3a9dc22, 0xf3b8b667, 0x9fc477de, 0x67378d8e, 0x6dd856d9,
            0xa319ce15, 0x07397375, 0x8a8e849e, 0xe1925c71, 0x74c04bf1, 0x4dda4815, 0x9d266d6a, 0x7440fb81,
            0x13328503, 0xd6bf7bae, 0x4838d65f, 0x1e152328, 0x8f8419a3, 0x72c8834a, 0xd7a023a7, 0x94ebc8ab,
            0x9fc10d0f, 0xde68a235, 0xa44cfe79, 0x9d1d84fc, 0x51d2b1ab, 0x2fd7e4b9, 0x65ca5b96, 0xdd69a0d8,
            0x604d51b2, 0x73aa8a56, 0x1a8c1e99, 0xaac40a27, 0x764dbeae, 0x1e99b96e, 0x2c5e9deb, 0x3a938fee,
            0x26e6db8f, 0x469356c5, 0xc8763c5b, 0x3f6c6af8, 0x7f7cc394, 0x9bfb227e, 0x89039d79, 0x8fe88b57,
            0xa09e8c8c, 0xfa7e3939, 0xd6b6d0ec, 0xdfea21ea, 0xb67c1fa4, 0xca1e3785, 0x1cfc8bed, 0xd18d8549,
            0x4ed0fe7e, 0xe4dbf063, 0x1761f93a, 0x53898e4c, 0x734de818, 0x2680b122, 0x298af231, 0x7983eed3,
            0x66c1a2a1, 0x9e17e496, 0xedb454e7, 0x50b704ca, 0x4cc317fb, 0x66b4835d, 0x219b97e2, 0x261e4e4c,
            0x1fe2cca7, 0xd7504dfa, 0xb9571fa0, 0x1ddc0325, 0xcf3f4688, 0xf4f5d05c, 0x38b6525c, 0x36f60e2b,
            0xeb359380, 0x9c4cd625, 0xaf0c317d, 0x258e5a80, 0x8b889d62, 0xf4d14597, 0xd4347f66, 0xe699ed85,
            0x2472f620, 0xc2a1e7b5, 0xab4f6451, 0x63767572, 0xa59e0bd1, 0x116d0016, 0x2cf9c8ca, 0x0b090a75,
            0xabeeddb2, 0x58efc10b, 0xc6e57a78, 0x2eab8ca6, 0x14a19564, 0x7c0828dd, 0xd74bbe77, 0x804456af,
            0xebe9ea2a, 0x03219a39, 0x49787fef, 0xa1e9300c, 0x5b45e522, 0xb49c3b39, 0xd4490ad5, 0x12a8f216,
            0x001f837c, 0x1877b51e, 0xa2853b80, 0x993e1de7, 0xb3598080, 0x252f59cf, 0xd23c8e17, 0x1bda0492,
            0x21e0bd50, 0x3b097ada, 0x8d14dedb, 0xf95cffa2, 0x38717007, 0xca672b91, 0x64c8e531, 0x241260ed,
            0x106c09b9, 0x7fba1954, 0x7884d9bc, 0x0647dfed, 0x63573ff0, 0x4fc8e956, 0x1db956e4, 0xb8d91274,
            0xa2ebee47, 0xd9f1f30c, 0xefed53d7, 0x2e6d02c3, 0xa9aa4d20, 0xb64be8d8, 0x70cb6af7, 0x98f076a4,
            0xbf844708, 0x94c3251f, 0x3e003e61, 0xb925a6cd, 0x61bdd130, 0xbf8d5108, 0x240ab57a, 0xfc87614b,
            0xef02cdd0, 0xa1082c04, 0x8215e577, 0xd39bb9c3, 0x27382596, 0x61cf4f94, 0x1b6baca2, 0x758f450c,
            0x959f587d, 0xb063e962, 0x60e8ed72, 0x7b649785, 0xfd080d23, 0x8c90fd9b, 0x106f72fe, 0x7976033a,
            0xa4ec0132, 0x733ea705, 0xb4d8f77b, 0x9e21f4f9, 0x9d765e41, 0xd30c088b, 0x5d94337f, 0x1a4e4822,
            0x6ffe73e8, 0xddf957bc, 0x64d0e29e, 0x08dd9bdf, 0x087e79e5, 0xe328e230, 0x1c2559e3, 0x720bf5f2,
            0xb0774d26, 0x443f64ec, 0x4112cf68, 0xd813f2fa, 0x660d3257, 0x59ac2c78, 0xe8469638, 0x93b633ab,
            0xc0c0f5a6, 0xcaf21ecd, 0x57277707, 0x506c11b9, 0xd83cc268, 0x4a29c646, 0xed2df212, 0xb5635c95,
            0x22af003a, 0x52e76259, 0x9aeba33a, 0x944f6de0, 0x6c47bec8, 0x6ad047c4, 0xa5b1cfdb, 0x7c45d833,
            0x5092ef95, 0x9338e69c, 0x455a4b4c, 0x6b02e631, 0x6b17b224, 0xd1e0ccd2, 0xde0c89a5, 0x50065e53,
            0x9c1169fa, 0x78edefd6, 0x6dc93d95, 0xee97f453, 0x32ab0edb, 0x3a6853c7, 0x31865ced, 0x67fef95d,
            0x1f2b1d1f, 0xb69e38a8, 0xaa9119ff, 0xf43c7328, 0xfb4a3d79, 0x3550c232, 0x371f77e7, 0x6bfa9aae,
            0xcd04f3ff, 0xe3273522, 0x9f91508b, 0x049a7f41, 0xfcb6be43, 0x08de8a1c, 0x8f9887e6, 0xb5b4071d,
            0x230e343d, 0x43ed7f5a, 0x3a88a0fb, 0x21874b8b, 0x1bdea12e, 0x53c065c6, 0xe34a1d25, 0xd6b04d3b,
            0x5e90277e, 0x2c046f22, 0xb10bb459, 0x3fa9ddfb, 0x0e09b88e, 0x10e8b35a, 0x9eedeca8, 0xd4c718bc,
            0x81536d60, 0x91b534f8, 0xec8177f8, 0x190e714f, 0xb592bf39, 0x89c350c8, 0xac042e70, 0xb49b52e5,
            0xfb152fe3, 0x3e666e6f, 0x3b544ebe, 0xe805a1e2, 0x24b33c9d, 0xe7473342, 0x0a804d18, 0x57e3306d,
            0x4ae7d6a3, 0x2d8d5432, 0xd1e649de, 0x8a328a1c, 0x07a3aec7, 0x84547ddc, 0x990a98fd, 0x1a4ff126,
            0xf6f7fd14, 0x30c05b1b, 0x8d2636b8, 0x46c9feb5, 0xccec0a73, 0x4e9d2827, 0x19ebb029, 0x4659d2b7,
            0x963ef2c9, 0x74f85198, 0x5a0f544d, 0x03727073, 0xc7f6aa2d, 0x352787ba, 0x9853eab6, 0xabbdcdd7,
            0xcf05daf5, 0x49cad48c, 0x7a4c10ec, 0xd9e92aa2, 0x13ae978d, 0x730499af, 0x4e4b705b, 0xff577222,
            0x55b6344c, 0xb862225b, 0xcac09afb, 0xdaf8e982, 0xb5fdfc5d, 0x310cb380, 0xe87fbb46, 0x2102ae46,
            0xf8549e1a, 0x07a69afd, 0xc4c118bf, 0xf9f4892e, 0x1af3dbe2, 0xf5b4b0b0, 0x962aceef, 0x046e3eca,
            0xf05d1296, 0x964781ce, 0x9c2ed440, 0x522e23f3, 0x177e00f9, 0x2bc60a63, 0x222bbfae, 0x486289dd,
            0x7dc7785b, 0x8af38731, 0x1fab64ea, 0xe4d94293, 0x9da058c6, 0x24c0e332, 0x233003b5, 0xd586bd01,
            0x5e563788, 0x7eba726d, 0x0a56a5f0, 0xd79476a8, 0x9e4c1269, 0x17efee45, 0x1d95b0a5, 0x93cbe0b6,
            0x65fa4f22, 0xd5f9e858, 0xc2b5a03f, 0x59300222, 0xce2f8642, 0x7ca9723f, 0x27853383, 0xc61bb3a1,
            0x150f361d, 0x9f6a419d, 0x64a53dc9, 0x142de49f, 0x0c335248, 0x0a9c32d5, 0xe6c42178, 0x71f1ce24,
            0xf1bcc3d2, 0xe728e8c8, 0x96fbf83a, 0x81a1549f, 0x5fa7867c, 0x56986e2e, 0x917f1dd5, 0xd20d8c88,
        };

        internal static readonly uint[] Castling = new uint[]
        {
            0x31d71dce,
            0xf165b587,
            0xa57e6339,
            0x1ef6e6db,
        };

        internal static readonly uint WhiteTurn = 0xf8d626aa;

        internal static readonly uint[] EnPassant = new uint[]
        {
            0x70cc73d9,
            0xe21a6b35,
            0x003a93d8,
            0x1c99ded3,
            0xcf3145de,
            0xd0e4427a,
            0x77c621cc,
            0x67a34dac,
        };
    }
}
